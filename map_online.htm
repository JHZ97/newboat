<!DOCTYPE html>  
<html>
	<head>  
		<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />  
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />  
		<title>Hello, World</title>  
		<style type="text/css">  
			html{height:100%}  
			body{height:100%;margin:0px;padding:0px}  
			#container{width: 100%;height: 100%;overflow: hidden;margin:0;font-family:"微软雅黑"}  
		</style>  
		<script type="text/javascript" src="http://api.map.baidu.com/api?v=3.0&ak=x6snAPtz1yvu1I9Zcl28sC6CritvnQCo">
		</script>
		<script type="text/javascript" src="qwebchannel.js"></script>
	</head>  
	<body>  
	<div id="container"></div> 
	</body>  
</html>
<script type="text/javascript"> 


	var map = new BMap.Map("container");// 创建地图实例
	var ini_point = new BMap.Point(120.125055,30.261413);// 创建点坐标  
	map.centerAndZoom(ini_point, 15);// 初始化地图，设置中心点坐标和地图级别  
	map.enableScrollWheelZoom(true);//开启滚轮放大缩小
	map.setMapType(BMAP_SATELLITE_MAP);//设置地图显示样式为卫星图
	//添加地图类型控件
	// map.addControl(new BMap.MapTypeControl({
	// 		mapTypes:[
	//             BMAP_NORMAL_MAP,
	//             BMAP_HYBRID_MAP,
	// 			BMAP_SATELLITE_MAP
	//         ]}));
	//向地图添加控件
		map.addControl(new BMap.NavigationControl());    
		map.addControl(new BMap.ScaleControl());    
		map.addControl(new BMap.OverviewMapControl());    
		map.addControl(new BMap.MapTypeControl()); 
		var boolFlag = new Boolean(true);//把 boolFlag 声明为 Boolean 对象 初始化赋值为true
	// alert(boolFlag);
//全景地图
	// var stCtrl = new BMap.PanoramaControl();  
	// stCtrl.setOffset(new BMap.Size(20, 20));  
	// map.addControl(stCtrl);

	//将Qt和Js交互的注册代码放在地图初始化之后，可以保证前面的代码也能执行，即不和Qt连接也可以直接在浏览器端显示前面初始化好的地图
	//Qt和Js交互 注册完毕后即可进行交互*******************************************
	new QWebChannel(qt.webChannelTransport,
		function(channel){
			window.bridge = channel.objects.passId; // 注册
		})
	// ********************************************************	

	var cur_point = null;//给cur_point初始值为null
	//addCurMarker();
	var path=[cur_point];//cur_point用来存放点的坐标
	map.addEventListener("mousemove",event2);//添加鼠标移动的事件监听函数 貌似Js调用不了Qt，所以这个事件监听函数不会执行 后面还要更改

	//鼠标点击拾取坐标
	// map.addEventListener("click",getGpsEvent);
	// function getGpsEvent(e){
	// 	alert(e.point.lng + "," + e.point.lat);
	// }
	
	//清除标签为label的标记
	function clearMaker(label){
	var allOverlay = map.getOverlays();
			for (var i = 0; i < allOverlay.length ; i++){
				 if (allOverlay[i] instanceof BMap.Marker) {
					if (allOverlay[i].getLabel() == null || allOverlay[i].getLabel().content == label) {
						map.removeOverlay(allOverlay[i]);
						return false;
					}
				}
			}
	}
	
	//画线	
	function drawLine(){
		map.clearOverlays();//注意这里画线的时候,清空了所有覆盖物 如果不想清空覆盖物，可以把这句代码注释掉
		var lines = new BMap.Polyline(path,{strokeColor:"yellow", strokeWeight:2, strokeOpacity:0.5});
		map.addOverlay(lines);//添加覆盖物lines
		setTerminal(path[path.length-1]);//设置重点坐标为path[path.length-1]
	}	
	
	//鼠标点击的响应
	function event1(e){
		path.push(new BMap.Point(e.point.lng,e.point.lat));//获取坐标点，存放在path中
		drawLine();//画线
	}

	//鼠标移动的响应 貌似Js调用不了Qt，所以这个事件监听函数不会执行 后面还要更改
	function event2(e){
		window.bridge.showGPS(e.point.lng,e.point.lat);
	}

	//进入设置状态(设置了监听鼠标事件)
	//Qt中的这个按钮 btn_set_terminal 即是"设置路径 也是"发送路径 自动按逻辑切换
	//Qt中点击"设置路径",会调用Js中的path_model函数
	function path_model()
	{
		clearMaker("t");
		map.clearOverlays(); 
		map.addEventListener("click",event1);
	}

	//发送path 
	//Qt中的这个按钮 btn_set_terminal 即是"设置路径 也是"发送路径 自动按逻辑切换
	//Qt中点击"发送路径",会调用Js中的path_model函数
	function send_path()
	{
	  map.removeEventListener("click", event1);
	  var arr = [];
	  for(i = 0; i < path.length-1; i++)
	  {
		 arr.push(path[i+1].lng);
		 arr.push(path[i+1].lat);
	  }  
	  window.bridge.getPath(JSON.stringify(arr));
	  path=[cur_point];
	}

	//清除路径标记
	//Qt中的这个按钮btn_path_reset 即是"清除路径" 也是"取消设置" 自动按逻辑切换
	//Qt中点击"清除路径",会调用Js中的path_clean函数
	function path_clean()
	{
	  map.clearOverlays();
	  clearMaker("t");
	}
	
	//Qt中的这个按钮btn_path_reset 即是"清除路径" 也是"取消设置" 自动按逻辑切换
	//Qt中点击"取消设置",会调用Js中的quit_path_set函数
	function quit_path_set()
	{
		map.removeEventListener("click", event1);
		path_clean();
		path=[cur_point];
	}

//获取gps来设置当前点坐标需要用到的两个函数 function theLocation(lon,lat)和function addCurMarker()
	
	// 用经纬度设置地图中心点，设置当前位置
	function theLocation(lon,lat){
			if (cur_point==null){
				map.setZoom(20);
				cur_point = new BMap.Point(lon,lat);
				addCurMarker();
				map.panTo(cur_point);	
			}
			else{
				cur_point = new BMap.Point(lon,lat);
				addCurMarker();
			}			
			path[0]=cur_point;
		}
	//添加当前位置标记
	function addCurMarker(){  // 创建图标对象   
		// var myIcon = new BMap.Icon("mark.png", new BMap.Size(40, 15), {    
		// 	// 指定定位位置。   
		// 	// 当标注显示在地图上时，其所指向的地理位置距离图标左上    
		// 	// 角各偏移10像素和25像素。您可以看到在本例中该位置即是   
		// 	// 图标中央下端的尖角位置。    
		// 	anchor: new BMap.Size(20, 15),    
		// 	// 设置图片偏移。   
		// 	// 当您需要从一幅较大的图片中截取某部分作为标注图标时，您   
		// 	// 需要指定大图的偏移位置，此做法与css sprites技术类似。    
		// 	imageOffset: new BMap.Size(0, 0)   // 设置图片偏移    
		// });      
		// var marker = new BMap.Marker(cur_point);
		
		var myIcon = new BMap.Icon("yellowdot2.png", new BMap.Size(2, 2), {
			// 指定定位位置。   
			// 当标注显示在地图上时，其所指向的地理位置距离图标左上    
			// 角各偏移10像素和25像素。您可以看到在本例中该位置即是   
			// 图标中央下端的尖角位置。    
			anchor: new BMap.Size(0, 0),    
			// 设置图片偏移。   
			// 当您需要从一幅较大的图片中截取某部分作为标注图标时，您   
			// 需要指定大图的偏移位置，此做法与css sprites技术类似。    
			imageOffset: new BMap.Size(0, 0)   // 设置图片偏移    
		});      
		
		// 创建标注对象并添加到地图  
		// var marker1 = new BMap.Marker(cur_point);
		// var marker2 = new BMap.Marker(cur_point, {icon: myIcon});  
		// var marker3 = new BMap.Marker(cur_point);
		
		//起点 只设置一次
		if(boolFlag ==true)
		{
			boolFlag = false;
			// alert(boolFlag);
			var marker1 = new BMap.Marker(cur_point); 
			var label_1 = new BMap.Label("start",{offset:new BMap.Size(20,-10)});
			marker1.setLabel(label_1);
			clearMaker("start");
		}
		// else{
		// 	return;
		// }
		//路径
		var marker2 = new BMap.Marker(cur_point, {icon: myIcon}); 				
		var label_2 = new BMap.Label("lujing",{offset:new BMap.Size(20,-10)});
		label_2.setStyle(
		{
			display : "none",
		});
		marker2.setLabel(label_2);	
		
		//当前
		var marker3 = new BMap.Marker(cur_point);
		var label_3 = new BMap.Label("cur",{offset:new BMap.Size(20,-10)});
		marker3.setLabel(label_3);
		clearMaker("cur");
				
		// var marker3 = new BMap.Marker(cur_point);//终点 每次清除前一次的
		//更改gps时，记得Qt和Js都要更改
		//恒泽 120.138288,30.477319
		//西溪 120.07527764592828,30.27776498218188
		//西溪 120.075278,30.277765
		// var marker = new BMap.Marker(new BMap.Point(120.138288,30.477319));//恒泽
		// var marker = new BMap.Marker(new BMap.Point(120.075278,30.277765));//西溪
		// var label_1 = new BMap.Label("start",{offset:new BMap.Size(20,-10)});
		// marker.setLabel(label_1);
			
	 //    var label = new BMap.Label("s");
	 //    label.setStyle({ 
		// 	display : "none"});
		// marker.setLabel(label);
		// marker.disableMassClear();//禁止覆盖物在map.clearOverlays方法中被清除
		// clearMaker("s");//清除标签为"s"的标记
		map.addOverlay(marker1);  
		map.addOverlay(marker2);
		map.addOverlay(marker3);
	}    



 
	//添加终点位置标记及相关动作
	function setTerminal(point){
			clearMaker("t");      //清除标签为"t"的标记
			//map.clearOverlays();
			addTerMarker(point);  //添加终点位置标记		
	}

	//添加终点位置标记
	function addTerMarker(point){  // 创建图标对象   
		var myIcon = new BMap.Icon("mark.png", new BMap.Size(40, 15), {    
			//"terminal.png", new BMap.Size(20, 23)  hkw
			//"terminal.png", new BMap.Size(48, 48)  zss
			// 指定定位位置。   
			// 当标注显示在地图上时，其所指向的地理位置距离图标左上    
			// 角各偏移10像素和25像素。您可以看到在本例中该位置即是   
			// 图标中央下端的尖角位置。    
			// anchor: new BMap.Size(10, 23), //hkw
			   anchor: new BMap.Size(15,10),
			// 设置图片偏移。   
			// 当您需要从一幅较大的图片中截取某部分作为标注图标时，您   
			// 需要指定大图的偏移位置，此做法与css sprites技术类似。    
			imageOffset: new BMap.Size(0, 0)   // 设置图片偏移    
		});      
		// 创建标注对象并添加到地图   
		// var marker = new BMap.Marker(point, {icon: myIcon});  //使用mark.png
		var marker = new BMap.Marker(point);//不适用mark.png
		// var marker = new BMap.Marker(point); 
		var label_2 = new BMap.Label("cur",{offset:new BMap.Size(20,-10)});
		label_2.setStyle({
				color : "red",
				fontSize : "12px",
				height : "14px",
				lineHeight : "14px",
				fontFamily:"微软雅黑"
				 });
		marker.setLabel(label_2);
		
	 //    var label = new BMap.Label("t");
	 //    label.setStyle({ 
		// display : "none"});
		// marker.setLabel(label);
		map.addOverlay(marker);    
	}    
</script> 
